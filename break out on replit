https://repl.it/@VictorFloresBen/sideways-pong#main.py
import pygame
pygame.init()

class Brick:
  def __init__(self,xpos,ypos):
    self.xpos = xpos
    self.ypos = ypos
    self.alive = True

  def draw(self):
    if self.alive is True:
      pygame.draw.rect(screen, (255,0,255),(self.xpos, self.ypos, 50,20))

  def collide(self,x,y):
    if self.alive is True:
      if x+20>self.xpos and x<self.xpos+50 and y+20> self.ypos and y < self.ypos+20:
        self.alive= False
        return True

screen = pygame.display.set_mode((700,500))
pygame.display.set_caption("sideways pong")
clock = pygame.time.Clock()

#variables
potato = False
px = 300
py = 450

bx = 200
by = 200

bVx = 5
bVy = 5
#bricks of cokeacola
b1 = Brick(20,20)
b2 = Brick(40,40)
b3 = Brick(60,60)
b4 = Brick(80,80)
b5 = Brick(100,100)
b6 = Brick(120,120)
b7 = Brick(140,140)
b8 = Brick(160,160)
b9 = Brick(180,180)
b10 = Brick(200,200)
b11 = Brick(220,220)
b12 = Brick(240,240)
b13 = Brick(260,240)
b14 = Brick(280,260)
b15 = Brick(300,280)
b16 = Brick(320,300)
b17 = Brick(340,320)
b18 = Brick(360,350)
b19 = Brick(380,360)
b20 = Brick(400,380)

while not potato: #gameloop
  clock.tick(60)

  for event in pygame.event.get():
    if event.type == pygame.quit:
      potato = True

  keys = pygame.key.get_pressed()
  if keys[pygame.K_LEFT]:
    px -=5
  if keys[pygame.K_RIGHT]:
    px +=5

#moves ball
  bx += bVx
  by += bVy

# makes ball blounce
  if bx < 0 or bx+20> 700:
    bVx *= -1
  if by < 0 or by+20> 500:
    bVy *= -1

# makes ball bounce of paddle
  if by +20> py and bx +20 > px and bx < px+100:
    bVy *= -1

  if b1.collide(bx,by):
    bVy*=-1
  if b2.collide(bx,by):
    bVy*=-1
  if b3.collide(bx,by):
    bVy*=-1
  if b4.collide(bx,by):
    bVy*=-1
  if b5.collide(bx,by):
    bVy*=-1  
  if b6.collide(bx,by):
    bVy*=-1
  if b7.collide(bx,by):
    bVy*=-1
  if b8.collide(bx,by):
    bVy*=-1
  if b9.collide(bx,by):
    bVy*=-1
  if b10.collide(bx,by):
    bVy*=-1
  if b11.collide(bx,by):
    bVy*=-1
  if b12.collide(bx,by):
    bVy*=-1
  if b13.collide(bx,by):
    bVy*=-1
  if b14.collide(bx,by):
    bVy*=-1
  if b15.collide(bx,by):
    bVy*=-1
  if b16.collide(bx,by):
    bVy*=-1
  if b17.collide(bx,by):
    bVy*=-1
  if b18.collide(bx,by):
    bVy*=-1
  if b19.collide(bx,by):
    bVy*=-1
  if b20.collide(bx,by):
    bVy*=-1
#renter section the
  screen.fill((0,0,0))

  b1.draw()
  b2.draw()
  b3.draw()
  b4.draw()
  b5.draw()
  b6.draw()
  b7.draw()
  b8.draw()
  b9.draw()
  b10.draw()
  b11.draw()
  b12.draw()
  b13.draw()
  b14.draw()
  b15.draw()
  b17.draw()
  b18.draw()
  b19.draw()
  b20.draw()
  
  pygame.draw.rect(screen,(255,255,255),(px,py,100,20))
  pygame.draw.rect(screen,(255,255,255),(bx,by,20,20))

  pygame.display.flip()
#end of game loop
pygame.quit()
